<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>message_convert_to_rdb_rud.prototype[debezium_mysql]</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
      <parameter>
        <name>Config.Log.Kafka.Consumer.Group</name>
        <default_value>kpt.mysql.20210831</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Kafka.Data.Topic</name>
        <default_value>kpt_debezium-mysql</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Kafka.Server.Bootstrap</name>
        <default_value>kafka:9092</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Source.Column.Mapping</name>
        <default_value>mysql_schema_to_column_meta.mapping</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Source.Key.Mapping</name>
        <default_value>debezium_key_to_kettle_field.mapping</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Source.Switch.Mapping</name>
        <default_value>debezium_operate_to_kettle_switch_flag.mapping</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Source.Transformation.Path</name>
        <default_value>from-debezium</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Target.Case.Name</name>
        <default_value>true</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Target.Column.Mapping</name>
        <default_value>pgsql_column_case_to_column.mapping</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Target.Ingore.Mapping</name>
        <default_value>pgsql_table_exists_to_ingore.mapping</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Config.Log.Target.Transformation.Path</name>
        <default_value>to_pgsql</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Param.Schema.Name</name>
        <default_value>kpt_sync__test_kpt_cdc</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>Param.Table.Name</name>
        <default_value>debezium_types</default_value>
        <description/>
      </parameter>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>Y</capture_step_performance>
    <step_performance_capturing_delay>60000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2018/04/20 21:37:30.651</created_date>
    <modified_user>-</modified_user>
    <modified_date>2021/09/11 18:10:19.629</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>TODO 

STRUCT
io.debezium.data.geometry.Geometry
JSON String to_?

BYTES
io.debezium.data.Bits
with need read parameters.length
alway Base64

STRING of binary
BUG: cant obtain the method to use by schema
convert binary to string, need read config of connector
Byte_to_Binary 
Base64_to_Binary
Hex_to_Binary</note>
      <xloc>928</xloc>
      <yloc>1648</yloc>
      <width>402</width>
      <heigth>342</heigth>
      <fontname>Microsoft YaHei UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>205</backgroundcolorgreen>
      <backgroundcolorblue>112</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <order>
    <hop>
      <from>GMT_to_Timestamp</from>
      <to>days_to_Date</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>JSON input: column</from>
      <to>to_Boolean</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / case: target_switch_flag</from>
      <to>Delete</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Switch / case: target_switch_flag</from>
      <to>InsertUpdate: insert</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Switch / case: target_switch_flag</from>
      <to>InsertUpdate: update</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Switch / case: target_switch_flag</from>
      <to>TableOutput</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>days_to_Date</from>
      <to>milliseconds_to_Date</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>format_to_Date</from>
      <to>format_to_Timestamp</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>format_to_Timestamp</from>
      <to>Switch / case: target_switch_flag</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>microseconds_to_Date</from>
      <to>nanoseconds_to_Date</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>milliseconds_to_Date</from>
      <to>microseconds_to_Date</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>nanoseconds_to_Date</from>
      <to>scale_to_BigNumber.step1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>scale_to_BigNumber.step1</from>
      <to>scale_to_BigNumber.step2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>to_BigNumber</from>
      <to>GMT_to_Timestamp</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>to_Boolean</from>
      <to>to_Integer</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>to_Integer</from>
      <to>to_Number</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>to_Number</from>
      <to>to_BigNumber</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DataGrid: test_kpt_cdc</from>
      <to>JSON input: column</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Byte_to_Binary.step1</from>
      <to>Byte_to_Binary.step2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Base64_to_Binary.step1</from>
      <to>Base64_to_Binary.step2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>scale_to_BigNumber.step2</from>
      <to>format_to_Date</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Hex_to_Binary.step1</from>
      <to>Hex_to_Binary.step2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>scale_to_BigNumber.step2</from>
      <to>Switch / case</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / case</from>
      <to>Byte_to_Binary.step1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / case</from>
      <to>Base64_to_Binary.step1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Switch / case</from>
      <to>Hex_to_Binary.step1</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Base64_to_Binary.step2</from>
      <to>Base64_to_Binary.check</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Base64_to_Binary.check</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var row = createRowCopy(getOutputRowMeta().size());
var fieldNames = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; fieldNames.length; index++) {
	var inMeta = getInputRowMeta().getValueMeta(index);
	var outMate = getOutputRowMeta().getValueMeta(index);
//var info = fieldNames[index] + ": " + inMeta.getTypeDesc() + " - " + outMate.getTypeDesc();
//Alert(info);
	if(inMeta.getTypeDesc() == 'Binary' &amp;&amp; outMate.getTypeDesc() == 'String'){
		var value = row[index];
		if(value != null) {
			var str = Packages.org.apache.commons.codec.binary.Base64.encodeBase64String(value);
			value = str;
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>kettle_field_BIT_not_1</name>
        <rename>kettle_field_BIT_not_1</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_BINARY</name>
        <rename>kettle_field_BINARY</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_VARBINARY</name>
        <rename>kettle_field_VARBINARY</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_TINYBLOB</name>
        <rename>kettle_field_TINYBLOB</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_BLOB</name>
        <rename>kettle_field_BLOB</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_MEDIUMBLOB</name>
        <rename>kettle_field_MEDIUMBLOB</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_LONGBLOB</name>
        <rename>kettle_field_LONGBLOB</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>992</xloc>
      <yloc>2032</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Base64_to_Binary.step1</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_BIT_not_1</name>
        <rename>kettle_field_BIT_not_1</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>2</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_BINARY</name>
        <rename>kettle_field_BINARY</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>1904</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Base64_to_Binary.step2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var row = createRowCopy(getOutputRowMeta().size());
var fieldNames = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; fieldNames.length; index++) {
	var inMeta = getInputRowMeta().getValueMeta(index);
	var outMate = getOutputRowMeta().getValueMeta(index);
//var info = fieldNames[index] + ": " + inMeta.getTypeDesc() + " - " + outMate.getTypeDesc();
//Alert(info);
	if(inMeta.getTypeDesc() == 'String' &amp;&amp; outMate.getTypeDesc() == 'Binary'){
		outMate.setConversionMask(null);
		var value = row[index];
//Alert(value);
		if(value != null &amp;&amp; value.length() != 0) {
			var length = inMeta.getConversionMask();
			var bytes = Packages.org.apache.commons.codec.binary.Base64.decodeBase64(value);
//Alert('row of ' + value + ' type of ' + typeof bytes + ' len '+ bytes.length);
//Alert(bytes[0]);
//var content = Packages.org.pentaho.di.core.Const.createByteArray(length);
//Alert('content type of ' + typeof content + ' len '+ content.length);
			value = bytes;
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>kettle_field_BIT_not_1</name>
        <rename>kettle_field_BIT_not_1</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_BINARY</name>
        <rename>kettle_field_BINARY</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_VARBINARY</name>
        <rename>kettle_field_VARBINARY</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_TINYBLOB</name>
        <rename>kettle_field_TINYBLOB</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_BLOB</name>
        <rename>kettle_field_BLOB</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_MEDIUMBLOB</name>
        <rename>kettle_field_MEDIUMBLOB</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_LONGBLOB</name>
        <rename>kettle_field_LONGBLOB</rename>
        <type>Binary</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>2032</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Byte_to_Binary.step1</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>1648</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Byte_to_Binary.step2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var fieldNames = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; fieldNames.length; index++) {
	var inMeta = getInputRowMeta().getValueMeta(index);
	var outMate = getOutputRowMeta().getValueMeta(index);
	info = info + fieldNames[index] + ": " + inMeta.getTypeDesc() + " - " + outMate.getTypeDesc() + "\n";
	if(inMeta.getTypeDesc() == 'String' &amp;&amp; outMate.getTypeDesc() == 'Binary'){
		var value = row[index];
		outMate.setConversionMask(null);
		if(value != null &amp;&amp; value.length() != 0) {
			var length = inMeta.getConversionMask();

			var bytes = Packages.org.apache.commons.codec.binary.Base64.decodeBase64(value);
//Alert('row of ' + value + ' type of ' + typeof bytes + ' len '+ bytes.length);
//Alert(bytes[0]);
//			var content = Packages.org.pentaho.di.core.Const.createByteArray(length);
//Alert('content type of ' + typeof content + ' len '+ content.length);
			value = bytes;
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>1776</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DataGrid: test_kpt_cdc</name>
    <type>DataGrid</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>group_table_id</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>group_table_name</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>source_schema</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>source_table</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>target_schema</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>target_table</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>key</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>message</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>topic</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>partition</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>offset</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
      <field>
        <name>timestamp</name>
        <type>Timestamp</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
        <field_null_if/>
      </field>
    </fields>
    <data>
      <line>
        <item>0</item>
        <item>kpt_sync__test_kpt_cdc.debezium_types</item>
        <item>test_kpt_cdc</item>
        <item>debezium_types</item>
        <item>kpt_sync__test_kpt_cdc</item>
        <item>debezium_types</item>
        <item>{"schema":{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"string","optional":false,"field":"__dbz__physicalTableIdentifier"}],"optional":false,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_base64.Key"},"payload":{"_id":"0","__dbz__physicalTableIdentifier":"test_debezium_mysql-test_kpt_cdc.test_kpt_cdc.debezium_types"}} </item>
        <item>{"schema":{"type":"struct","fields":[{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"int16","optional":true,"field":"BOOLEAN"},{"type":"int16","optional":true,"field":"BOOL"},{"type":"boolean","optional":true,"field":"BIT_1"},{"type":"bytes","optional":true,"name":"io.debezium.data.Bits","version":1,"parameters":{"length":"2"},"field":"BIT_not_1"},{"type":"int16","optional":true,"field":"TINYINT"},{"type":"int16","optional":true,"field":"SMALLINT"},{"type":"int32","optional":true,"field":"MEDIUMINT"},{"type":"int32","optional":true,"field":"INT"},{"type":"int32","optional":true,"field":"INTEGER"},{"type":"int64","optional":true,"field":"BIGINT"},{"type":"double","optional":true,"field":"REAL"},{"type":"double","optional":true,"field":"FLOAT"},{"type":"double","optional":true,"field":"DOUBLE"},{"type":"string","optional":true,"field":"CHAR"},{"type":"string","optional":true,"field":"VARCHAR"},{"type":"string","optional":true,"field":"BINARY"},{"type":"string","optional":true,"field":"VARBINARY"},{"type":"string","optional":true,"field":"TINYBLOB"},{"type":"string","optional":true,"field":"TINYTEXT"},{"type":"string","optional":true,"field":"BLOB"},{"type":"string","optional":true,"field":"TEXT"},{"type":"string","optional":true,"field":"MEDIUMBLOB"},{"type":"string","optional":true,"field":"MEDIUMTEXT"},{"type":"string","optional":true,"field":"LONGBLOB"},{"type":"string","optional":true,"field":"LONGTEXT"},{"type":"string","optional":true,"name":"io.debezium.data.Json","version":1,"field":"JSON"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"E1"},"field":"ENUM"},{"type":"string","optional":true,"name":"io.debezium.data.EnumSet","version":1,"parameters":{"allowed":"S1,S2"},"field":"SET"},{"type":"int32","optional":true,"name":"io.debezium.time.Year","version":1,"field":"YEAR"},{"type":"string","optional":true,"name":"io.debezium.time.ZonedTimestamp","version":1,"field":"TIMESTAMP"},{"type":"int32","optional":true,"name":"io.debezium.time.Date","version":1,"field":"DATE"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTime","version":1,"field":"TIME"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"DATETIME_3"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTimestamp","version":1,"field":"DATETIME_6"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"1","connect.decimal.precision":"10"},"field":"NUMERIC"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"2","connect.decimal.precision":"10"},"field":"DECIMAL"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRY"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"LINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"POLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOINT"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTILINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRYCOLLECTION"}],"optional":true,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_base64.Value","field":"before"},{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"int16","optional":true,"field":"BOOLEAN"},{"type":"int16","optional":true,"field":"BOOL"},{"type":"boolean","optional":true,"field":"BIT_1"},{"type":"bytes","optional":true,"name":"io.debezium.data.Bits","version":1,"parameters":{"length":"2"},"field":"BIT_not_1"},{"type":"int16","optional":true,"field":"TINYINT"},{"type":"int16","optional":true,"field":"SMALLINT"},{"type":"int32","optional":true,"field":"MEDIUMINT"},{"type":"int32","optional":true,"field":"INT"},{"type":"int32","optional":true,"field":"INTEGER"},{"type":"int64","optional":true,"field":"BIGINT"},{"type":"double","optional":true,"field":"REAL"},{"type":"double","optional":true,"field":"FLOAT"},{"type":"double","optional":true,"field":"DOUBLE"},{"type":"string","optional":true,"field":"CHAR"},{"type":"string","optional":true,"field":"VARCHAR"},{"type":"string","optional":true,"field":"BINARY"},{"type":"string","optional":true,"field":"VARBINARY"},{"type":"string","optional":true,"field":"TINYBLOB"},{"type":"string","optional":true,"field":"TINYTEXT"},{"type":"string","optional":true,"field":"BLOB"},{"type":"string","optional":true,"field":"TEXT"},{"type":"string","optional":true,"field":"MEDIUMBLOB"},{"type":"string","optional":true,"field":"MEDIUMTEXT"},{"type":"string","optional":true,"field":"LONGBLOB"},{"type":"string","optional":true,"field":"LONGTEXT"},{"type":"string","optional":true,"name":"io.debezium.data.Json","version":1,"field":"JSON"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"E1"},"field":"ENUM"},{"type":"string","optional":true,"name":"io.debezium.data.EnumSet","version":1,"parameters":{"allowed":"S1,S2"},"field":"SET"},{"type":"int32","optional":true,"name":"io.debezium.time.Year","version":1,"field":"YEAR"},{"type":"string","optional":true,"name":"io.debezium.time.ZonedTimestamp","version":1,"field":"TIMESTAMP"},{"type":"int32","optional":true,"name":"io.debezium.time.Date","version":1,"field":"DATE"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTime","version":1,"field":"TIME"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"DATETIME_3"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTimestamp","version":1,"field":"DATETIME_6"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"1","connect.decimal.precision":"10"},"field":"NUMERIC"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"2","connect.decimal.precision":"10"},"field":"DECIMAL"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRY"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"LINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"POLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOINT"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTILINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRYCOLLECTION"}],"optional":true,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_base64.Value","field":"after"},{"type":"struct","fields":[{"type":"string","optional":false,"field":"version"},{"type":"string","optional":false,"field":"connector"},{"type":"string","optional":false,"field":"name"},{"type":"int64","optional":false,"field":"ts_ms"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"true,last,false"},"default":"false","field":"snapshot"},{"type":"string","optional":false,"field":"db"},{"type":"string","optional":true,"field":"sequence"},{"type":"string","optional":true,"field":"table"},{"type":"int64","optional":false,"field":"server_id"},{"type":"string","optional":true,"field":"gtid"},{"type":"string","optional":false,"field":"file"},{"type":"int64","optional":false,"field":"pos"},{"type":"int32","optional":false,"field":"row"},{"type":"int64","optional":true,"field":"thread"},{"type":"string","optional":true,"field":"query"}],"optional":false,"name":"io.debezium.connector.mysql.Source","field":"source"},{"type":"string","optional":false,"field":"op"},{"type":"int64","optional":true,"field":"ts_ms"},{"type":"struct","fields":[{"type":"string","optional":false,"field":"id"},{"type":"int64","optional":false,"field":"total_order"},{"type":"int64","optional":false,"field":"data_collection_order"}],"optional":true,"field":"transaction"}],"optional":false,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_base64.Envelope"},"payload":{"before":null,"after":{"_id":"0","BOOLEAN":0,"BOOL":1,"BIT_1":true,"BIT_not_1":"Ag==","TINYINT":5,"SMALLINT":6,"MEDIUMINT":7,"INT":8,"INTEGER":9,"BIGINT":10,"REAL":11.1,"FLOAT":12.229999542236328,"DOUBLE":13.34,"CHAR":"14","VARCHAR":"15","BINARY":"FgAAAAAAAAAAAAAAAAAAAAAAAAA=","VARBINARY":"Fw==","TINYBLOB":"GA==","TINYTEXT":"\u0019","BLOB":"IA==","TEXT":"!","MEDIUMBLOB":"Ig==","MEDIUMTEXT":"#","LONGBLOB":"JA==","LONGTEXT":"%","JSON":"{}","ENUM":"E1","SET":"S1,S2","YEAR":2021,"TIMESTAMP":"2021-09-11T03:59:00Z","DATE":18881,"TIME":42660000000,"DATETIME_3":1631318400000,"DATETIME_6":1631318400000000,"NUMERIC":"eg==","DECIMAL":"BUI=","GEOMETRY":{"wkb":"AQEAAAAAAAAAAADwPwAAAAAAAPA/","srid":null},"LINESTRING":{"wkb":"AQIAAAACAAAAAAAAAAAAAEAAAAAAAADwPwAAAAAAABhAAAAAAAAAGEA=","srid":null},"POLYGON":{"wkb":"AQMAAAABAAAABQAAAAAAAAAAAAAAAAAAAAAAFEAAAAAAAAAAQAAAAAAAABRAAAAAAAAAAEAAAAAAAAAcQAAAAAAAAAAAAAAAAAAAHEAAAAAAAAAAAAAAAAAAABRA","srid":null},"MULTIPOINT":{"wkb":"AQQAAAACAAAAAQEAAAAAAAAAAADwPwAAAAAAAPA/AQEAAADNzMzMzMwAQM3MzMzMzABA","srid":null},"MULTILINESTRING":{"wkb":"AQUAAAACAAAAAQIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJZAAAAAAAAgjEABAgAAAAIAAAAAAAAAAACJQAAAAAAAwIJAAAAAAAAAaUAAAAAAAAB5QA==","srid":null},"MULTIPOLYGON":{"wkb":"AQYAAAABAAAAAQMAAAABAAAABwAAAHMdnuSsxkZAAYAbgAyqXsDESLpM+8JGQAGAG8CvqF7AuMxFlyrDRkAAgBvA8KNewFLqMQahxUZAAYAbgOWjXsDP3y03mcdGQAGAGwCfpl7AWAhuvPfHRkABgBvAvalewHMdnuSsxkZAAYAbgAyqXsA=","srid":null},"GEOMETRYCOLLECTION":{"wkb":"AQcAAAADAAAAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAQIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJZAAAAAAAAgjEABAwAAAAEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEAAAAAAAACQQAAAAAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","srid":null}},"source":{"version":"1.6.3.Final","connector":"mysql","name":"test_debezium_mysql-test_kpt_cdc","ts_ms":1634989523423,"snapshot":"last","db":"test_kpt_cdc","sequence":null,"table":"debezium_types","server_id":0,"gtid":null,"file":"mysql-bin.000027","pos":1032636150,"row":0,"thread":null,"query":null},"op":"r","ts_ms":1634989523424,"transaction":null}}</item>
        <item>test_debezium_mssql-test_kpt_cdc.data-changes.binary_base64</item>
        <item>0</item>
        <item>6</item>
        <item>2021-10-23 11:45:24.078</item>
      </line>
      <line>
        <item>1</item>
        <item>kpt_sync__test_kpt_cdc.debezium_types</item>
        <item>test_kpt_cdc</item>
        <item>debezium_types</item>
        <item>kpt_sync__test_kpt_cdc</item>
        <item>debezium_types</item>
        <item>{"schema":{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"string","optional":false,"field":"__dbz__physicalTableIdentifier"}],"optional":false,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_bytes.Key"},"payload":{"_id":"0","__dbz__physicalTableIdentifier":"test_debezium_mysql-test_kpt_cdc.test_kpt_cdc.debezium_types"}} </item>
        <item>{"schema":{"type":"struct","fields":[{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"int16","optional":true,"field":"BOOLEAN"},{"type":"int16","optional":true,"field":"BOOL"},{"type":"boolean","optional":true,"field":"BIT_1"},{"type":"bytes","optional":true,"name":"io.debezium.data.Bits","version":1,"parameters":{"length":"2"},"field":"BIT_not_1"},{"type":"int16","optional":true,"field":"TINYINT"},{"type":"int16","optional":true,"field":"SMALLINT"},{"type":"int32","optional":true,"field":"MEDIUMINT"},{"type":"int32","optional":true,"field":"INT"},{"type":"int32","optional":true,"field":"INTEGER"},{"type":"int64","optional":true,"field":"BIGINT"},{"type":"double","optional":true,"field":"REAL"},{"type":"double","optional":true,"field":"FLOAT"},{"type":"double","optional":true,"field":"DOUBLE"},{"type":"string","optional":true,"field":"CHAR"},{"type":"string","optional":true,"field":"VARCHAR"},{"type":"bytes","optional":true,"field":"BINARY"},{"type":"bytes","optional":true,"field":"VARBINARY"},{"type":"bytes","optional":true,"field":"TINYBLOB"},{"type":"string","optional":true,"field":"TINYTEXT"},{"type":"bytes","optional":true,"field":"BLOB"},{"type":"string","optional":true,"field":"TEXT"},{"type":"bytes","optional":true,"field":"MEDIUMBLOB"},{"type":"string","optional":true,"field":"MEDIUMTEXT"},{"type":"bytes","optional":true,"field":"LONGBLOB"},{"type":"string","optional":true,"field":"LONGTEXT"},{"type":"string","optional":true,"name":"io.debezium.data.Json","version":1,"field":"JSON"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"E1"},"field":"ENUM"},{"type":"string","optional":true,"name":"io.debezium.data.EnumSet","version":1,"parameters":{"allowed":"S1,S2"},"field":"SET"},{"type":"int32","optional":true,"name":"io.debezium.time.Year","version":1,"field":"YEAR"},{"type":"string","optional":true,"name":"io.debezium.time.ZonedTimestamp","version":1,"field":"TIMESTAMP"},{"type":"int32","optional":true,"name":"io.debezium.time.Date","version":1,"field":"DATE"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTime","version":1,"field":"TIME"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"DATETIME_3"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTimestamp","version":1,"field":"DATETIME_6"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"1","connect.decimal.precision":"10"},"field":"NUMERIC"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"2","connect.decimal.precision":"10"},"field":"DECIMAL"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRY"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"LINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"POLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOINT"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTILINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRYCOLLECTION"}],"optional":true,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_bytes.Value","field":"before"},{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"int16","optional":true,"field":"BOOLEAN"},{"type":"int16","optional":true,"field":"BOOL"},{"type":"boolean","optional":true,"field":"BIT_1"},{"type":"bytes","optional":true,"name":"io.debezium.data.Bits","version":1,"parameters":{"length":"2"},"field":"BIT_not_1"},{"type":"int16","optional":true,"field":"TINYINT"},{"type":"int16","optional":true,"field":"SMALLINT"},{"type":"int32","optional":true,"field":"MEDIUMINT"},{"type":"int32","optional":true,"field":"INT"},{"type":"int32","optional":true,"field":"INTEGER"},{"type":"int64","optional":true,"field":"BIGINT"},{"type":"double","optional":true,"field":"REAL"},{"type":"double","optional":true,"field":"FLOAT"},{"type":"double","optional":true,"field":"DOUBLE"},{"type":"string","optional":true,"field":"CHAR"},{"type":"string","optional":true,"field":"VARCHAR"},{"type":"bytes","optional":true,"field":"BINARY"},{"type":"bytes","optional":true,"field":"VARBINARY"},{"type":"bytes","optional":true,"field":"TINYBLOB"},{"type":"string","optional":true,"field":"TINYTEXT"},{"type":"bytes","optional":true,"field":"BLOB"},{"type":"string","optional":true,"field":"TEXT"},{"type":"bytes","optional":true,"field":"MEDIUMBLOB"},{"type":"string","optional":true,"field":"MEDIUMTEXT"},{"type":"bytes","optional":true,"field":"LONGBLOB"},{"type":"string","optional":true,"field":"LONGTEXT"},{"type":"string","optional":true,"name":"io.debezium.data.Json","version":1,"field":"JSON"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"E1"},"field":"ENUM"},{"type":"string","optional":true,"name":"io.debezium.data.EnumSet","version":1,"parameters":{"allowed":"S1,S2"},"field":"SET"},{"type":"int32","optional":true,"name":"io.debezium.time.Year","version":1,"field":"YEAR"},{"type":"string","optional":true,"name":"io.debezium.time.ZonedTimestamp","version":1,"field":"TIMESTAMP"},{"type":"int32","optional":true,"name":"io.debezium.time.Date","version":1,"field":"DATE"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTime","version":1,"field":"TIME"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"DATETIME_3"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTimestamp","version":1,"field":"DATETIME_6"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"1","connect.decimal.precision":"10"},"field":"NUMERIC"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"2","connect.decimal.precision":"10"},"field":"DECIMAL"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRY"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"LINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"POLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOINT"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTILINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRYCOLLECTION"}],"optional":true,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_bytes.Value","field":"after"},{"type":"struct","fields":[{"type":"string","optional":false,"field":"version"},{"type":"string","optional":false,"field":"connector"},{"type":"string","optional":false,"field":"name"},{"type":"int64","optional":false,"field":"ts_ms"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"true,last,false"},"default":"false","field":"snapshot"},{"type":"string","optional":false,"field":"db"},{"type":"string","optional":true,"field":"sequence"},{"type":"string","optional":true,"field":"table"},{"type":"int64","optional":false,"field":"server_id"},{"type":"string","optional":true,"field":"gtid"},{"type":"string","optional":false,"field":"file"},{"type":"int64","optional":false,"field":"pos"},{"type":"int32","optional":false,"field":"row"},{"type":"int64","optional":true,"field":"thread"},{"type":"string","optional":true,"field":"query"}],"optional":false,"name":"io.debezium.connector.mysql.Source","field":"source"},{"type":"string","optional":false,"field":"op"},{"type":"int64","optional":true,"field":"ts_ms"},{"type":"struct","fields":[{"type":"string","optional":false,"field":"id"},{"type":"int64","optional":false,"field":"total_order"},{"type":"int64","optional":false,"field":"data_collection_order"}],"optional":true,"field":"transaction"}],"optional":false,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_bytes.Envelope"},"payload":{"before":null,"after":{"_id":"0","BOOLEAN":0,"BOOL":1,"BIT_1":true,"BIT_not_1":"Ag==","TINYINT":5,"SMALLINT":6,"MEDIUMINT":7,"INT":8,"INTEGER":9,"BIGINT":10,"REAL":11.1,"FLOAT":12.229999542236328,"DOUBLE":13.34,"CHAR":"14","VARCHAR":"15","BINARY":"FgAAAAAAAAAAAAAAAAAAAAAAAAA=","VARBINARY":"Fw==","TINYBLOB":"GA==","TINYTEXT":"\u0019","BLOB":"IA==","TEXT":"!","MEDIUMBLOB":"Ig==","MEDIUMTEXT":"#","LONGBLOB":"JA==","LONGTEXT":"%","JSON":"{}","ENUM":"E1","SET":"S1,S2","YEAR":2021,"TIMESTAMP":"2021-09-11T03:59:00Z","DATE":18881,"TIME":42660000000,"DATETIME_3":1631318400000,"DATETIME_6":1631318400000000,"NUMERIC":"eg==","DECIMAL":"BUI=","GEOMETRY":{"wkb":"AQEAAAAAAAAAAADwPwAAAAAAAPA/","srid":null},"LINESTRING":{"wkb":"AQIAAAACAAAAAAAAAAAAAEAAAAAAAADwPwAAAAAAABhAAAAAAAAAGEA=","srid":null},"POLYGON":{"wkb":"AQMAAAABAAAABQAAAAAAAAAAAAAAAAAAAAAAFEAAAAAAAAAAQAAAAAAAABRAAAAAAAAAAEAAAAAAAAAcQAAAAAAAAAAAAAAAAAAAHEAAAAAAAAAAAAAAAAAAABRA","srid":null},"MULTIPOINT":{"wkb":"AQQAAAACAAAAAQEAAAAAAAAAAADwPwAAAAAAAPA/AQEAAADNzMzMzMwAQM3MzMzMzABA","srid":null},"MULTILINESTRING":{"wkb":"AQUAAAACAAAAAQIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJZAAAAAAAAgjEABAgAAAAIAAAAAAAAAAACJQAAAAAAAwIJAAAAAAAAAaUAAAAAAAAB5QA==","srid":null},"MULTIPOLYGON":{"wkb":"AQYAAAABAAAAAQMAAAABAAAABwAAAHMdnuSsxkZAAYAbgAyqXsDESLpM+8JGQAGAG8CvqF7AuMxFlyrDRkAAgBvA8KNewFLqMQahxUZAAYAbgOWjXsDP3y03mcdGQAGAGwCfpl7AWAhuvPfHRkABgBvAvalewHMdnuSsxkZAAYAbgAyqXsA=","srid":null},"GEOMETRYCOLLECTION":{"wkb":"AQcAAAADAAAAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAQIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJZAAAAAAAAgjEABAwAAAAEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEAAAAAAAACQQAAAAAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","srid":null}},"source":{"version":"1.6.3.Final","connector":"mysql","name":"test_debezium_mysql-test_kpt_cdc","ts_ms":1634989523376,"snapshot":"last","db":"test_kpt_cdc","sequence":null,"table":"debezium_types","server_id":0,"gtid":null,"file":"mysql-bin.000027","pos":1032636150,"row":0,"thread":null,"query":null},"op":"r","ts_ms":1634989523376,"transaction":null}}</item>
        <item>test_debezium_mssql-test_kpt_cdc.data-changes.binary_bytes</item>
        <item>0</item>
        <item>6</item>
        <item>2021-10-23 11:45:23.653</item>
      </line>
      <line>
        <item>2</item>
        <item>kpt_sync__test_kpt_cdc.debezium_types</item>
        <item>test_kpt_cdc</item>
        <item>debezium_types</item>
        <item>kpt_sync__test_kpt_cdc</item>
        <item>debezium_types</item>
        <item>{"schema":{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"string","optional":false,"field":"__dbz__physicalTableIdentifier"}],"optional":false,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_hex.Key"},"payload":{"_id":"0","__dbz__physicalTableIdentifier":"test_debezium_mysql-test_kpt_cdc.test_kpt_cdc.debezium_types"}} </item>
        <item>{"schema":{"type":"struct","fields":[{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"int16","optional":true,"field":"BOOLEAN"},{"type":"int16","optional":true,"field":"BOOL"},{"type":"boolean","optional":true,"field":"BIT_1"},{"type":"bytes","optional":true,"name":"io.debezium.data.Bits","version":1,"parameters":{"length":"2"},"field":"BIT_not_1"},{"type":"int16","optional":true,"field":"TINYINT"},{"type":"int16","optional":true,"field":"SMALLINT"},{"type":"int32","optional":true,"field":"MEDIUMINT"},{"type":"int32","optional":true,"field":"INT"},{"type":"int32","optional":true,"field":"INTEGER"},{"type":"int64","optional":true,"field":"BIGINT"},{"type":"double","optional":true,"field":"REAL"},{"type":"double","optional":true,"field":"FLOAT"},{"type":"double","optional":true,"field":"DOUBLE"},{"type":"string","optional":true,"field":"CHAR"},{"type":"string","optional":true,"field":"VARCHAR"},{"type":"string","optional":true,"field":"BINARY"},{"type":"string","optional":true,"field":"VARBINARY"},{"type":"string","optional":true,"field":"TINYBLOB"},{"type":"string","optional":true,"field":"TINYTEXT"},{"type":"string","optional":true,"field":"BLOB"},{"type":"string","optional":true,"field":"TEXT"},{"type":"string","optional":true,"field":"MEDIUMBLOB"},{"type":"string","optional":true,"field":"MEDIUMTEXT"},{"type":"string","optional":true,"field":"LONGBLOB"},{"type":"string","optional":true,"field":"LONGTEXT"},{"type":"string","optional":true,"name":"io.debezium.data.Json","version":1,"field":"JSON"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"E1"},"field":"ENUM"},{"type":"string","optional":true,"name":"io.debezium.data.EnumSet","version":1,"parameters":{"allowed":"S1,S2"},"field":"SET"},{"type":"int32","optional":true,"name":"io.debezium.time.Year","version":1,"field":"YEAR"},{"type":"string","optional":true,"name":"io.debezium.time.ZonedTimestamp","version":1,"field":"TIMESTAMP"},{"type":"int32","optional":true,"name":"io.debezium.time.Date","version":1,"field":"DATE"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTime","version":1,"field":"TIME"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"DATETIME_3"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTimestamp","version":1,"field":"DATETIME_6"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"1","connect.decimal.precision":"10"},"field":"NUMERIC"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"2","connect.decimal.precision":"10"},"field":"DECIMAL"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRY"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"LINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"POLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOINT"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTILINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRYCOLLECTION"}],"optional":true,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_hex.Value","field":"before"},{"type":"struct","fields":[{"type":"string","optional":false,"default":"","field":"_id"},{"type":"int16","optional":true,"field":"BOOLEAN"},{"type":"int16","optional":true,"field":"BOOL"},{"type":"boolean","optional":true,"field":"BIT_1"},{"type":"bytes","optional":true,"name":"io.debezium.data.Bits","version":1,"parameters":{"length":"2"},"field":"BIT_not_1"},{"type":"int16","optional":true,"field":"TINYINT"},{"type":"int16","optional":true,"field":"SMALLINT"},{"type":"int32","optional":true,"field":"MEDIUMINT"},{"type":"int32","optional":true,"field":"INT"},{"type":"int32","optional":true,"field":"INTEGER"},{"type":"int64","optional":true,"field":"BIGINT"},{"type":"double","optional":true,"field":"REAL"},{"type":"double","optional":true,"field":"FLOAT"},{"type":"double","optional":true,"field":"DOUBLE"},{"type":"string","optional":true,"field":"CHAR"},{"type":"string","optional":true,"field":"VARCHAR"},{"type":"string","optional":true,"field":"BINARY"},{"type":"string","optional":true,"field":"VARBINARY"},{"type":"string","optional":true,"field":"TINYBLOB"},{"type":"string","optional":true,"field":"TINYTEXT"},{"type":"string","optional":true,"field":"BLOB"},{"type":"string","optional":true,"field":"TEXT"},{"type":"string","optional":true,"field":"MEDIUMBLOB"},{"type":"string","optional":true,"field":"MEDIUMTEXT"},{"type":"string","optional":true,"field":"LONGBLOB"},{"type":"string","optional":true,"field":"LONGTEXT"},{"type":"string","optional":true,"name":"io.debezium.data.Json","version":1,"field":"JSON"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"E1"},"field":"ENUM"},{"type":"string","optional":true,"name":"io.debezium.data.EnumSet","version":1,"parameters":{"allowed":"S1,S2"},"field":"SET"},{"type":"int32","optional":true,"name":"io.debezium.time.Year","version":1,"field":"YEAR"},{"type":"string","optional":true,"name":"io.debezium.time.ZonedTimestamp","version":1,"field":"TIMESTAMP"},{"type":"int32","optional":true,"name":"io.debezium.time.Date","version":1,"field":"DATE"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTime","version":1,"field":"TIME"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"DATETIME_3"},{"type":"int64","optional":true,"name":"io.debezium.time.MicroTimestamp","version":1,"field":"DATETIME_6"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"1","connect.decimal.precision":"10"},"field":"NUMERIC"},{"type":"bytes","optional":true,"name":"org.apache.kafka.connect.data.Decimal","version":1,"parameters":{"scale":"2","connect.decimal.precision":"10"},"field":"DECIMAL"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRY"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"LINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"POLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOINT"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTILINESTRING"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"MULTIPOLYGON"},{"type":"struct","fields":[{"type":"bytes","optional":false,"field":"wkb"},{"type":"int32","optional":true,"field":"srid"}],"optional":true,"name":"io.debezium.data.geometry.Geometry","version":1,"doc":"Geometry","field":"GEOMETRYCOLLECTION"}],"optional":true,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_hex.Value","field":"after"},{"type":"struct","fields":[{"type":"string","optional":false,"field":"version"},{"type":"string","optional":false,"field":"connector"},{"type":"string","optional":false,"field":"name"},{"type":"int64","optional":false,"field":"ts_ms"},{"type":"string","optional":true,"name":"io.debezium.data.Enum","version":1,"parameters":{"allowed":"true,last,false"},"default":"false","field":"snapshot"},{"type":"string","optional":false,"field":"db"},{"type":"string","optional":true,"field":"sequence"},{"type":"string","optional":true,"field":"table"},{"type":"int64","optional":false,"field":"server_id"},{"type":"string","optional":true,"field":"gtid"},{"type":"string","optional":false,"field":"file"},{"type":"int64","optional":false,"field":"pos"},{"type":"int32","optional":false,"field":"row"},{"type":"int64","optional":true,"field":"thread"},{"type":"string","optional":true,"field":"query"}],"optional":false,"name":"io.debezium.connector.mysql.Source","field":"source"},{"type":"string","optional":false,"field":"op"},{"type":"int64","optional":true,"field":"ts_ms"},{"type":"struct","fields":[{"type":"string","optional":false,"field":"id"},{"type":"int64","optional":false,"field":"total_order"},{"type":"int64","optional":false,"field":"data_collection_order"}],"optional":true,"field":"transaction"}],"optional":false,"name":"test_debezium_mysql_test_kpt_cdc.data_changes.binary_hex.Envelope"},"payload":{"before":null,"after":{"_id":"0","BOOLEAN":0,"BOOL":1,"BIT_1":true,"BIT_not_1":"Ag==","TINYINT":5,"SMALLINT":6,"MEDIUMINT":7,"INT":8,"INTEGER":9,"BIGINT":10,"REAL":11.1,"FLOAT":12.229999542236328,"DOUBLE":13.34,"CHAR":"14","VARCHAR":"15","BINARY":"1600000000000000000000000000000000000000","VARBINARY":"17","TINYBLOB":"18","TINYTEXT":"\u0019","BLOB":"20","TEXT":"!","MEDIUMBLOB":"22","MEDIUMTEXT":"#","LONGBLOB":"24","LONGTEXT":"%","JSON":"{}","ENUM":"E1","SET":"S1,S2","YEAR":2021,"TIMESTAMP":"2021-09-11T03:59:00Z","DATE":18881,"TIME":42660000000,"DATETIME_3":1631318400000,"DATETIME_6":1631318400000000,"NUMERIC":"eg==","DECIMAL":"BUI=","GEOMETRY":{"wkb":"AQEAAAAAAAAAAADwPwAAAAAAAPA/","srid":null},"LINESTRING":{"wkb":"AQIAAAACAAAAAAAAAAAAAEAAAAAAAADwPwAAAAAAABhAAAAAAAAAGEA=","srid":null},"POLYGON":{"wkb":"AQMAAAABAAAABQAAAAAAAAAAAAAAAAAAAAAAFEAAAAAAAAAAQAAAAAAAABRAAAAAAAAAAEAAAAAAAAAcQAAAAAAAAAAAAAAAAAAAHEAAAAAAAAAAAAAAAAAAABRA","srid":null},"MULTIPOINT":{"wkb":"AQQAAAACAAAAAQEAAAAAAAAAAADwPwAAAAAAAPA/AQEAAADNzMzMzMwAQM3MzMzMzABA","srid":null},"MULTILINESTRING":{"wkb":"AQUAAAACAAAAAQIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJZAAAAAAAAgjEABAgAAAAIAAAAAAAAAAACJQAAAAAAAwIJAAAAAAAAAaUAAAAAAAAB5QA==","srid":null},"MULTIPOLYGON":{"wkb":"AQYAAAABAAAAAQMAAAABAAAABwAAAHMdnuSsxkZAAYAbgAyqXsDESLpM+8JGQAGAG8CvqF7AuMxFlyrDRkAAgBvA8KNewFLqMQahxUZAAYAbgOWjXsDP3y03mcdGQAGAGwCfpl7AWAhuvPfHRkABgBvAvalewHMdnuSsxkZAAYAbgAyqXsA=","srid":null},"GEOMETRYCOLLECTION":{"wkb":"AQcAAAADAAAAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAQIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgJZAAAAAAAAgjEABAwAAAAEAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEAAAAAAAACQQAAAAAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","srid":null}},"source":{"version":"1.6.3.Final","connector":"mysql","name":"test_debezium_mysql-test_kpt_cdc","ts_ms":1634989528084,"snapshot":"last","db":"test_kpt_cdc","sequence":null,"table":"debezium_types","server_id":0,"gtid":null,"file":"mysql-bin.000027","pos":1032636150,"row":0,"thread":null,"query":null},"op":"r","ts_ms":1634989528192,"transaction":null}}</item>
        <item>test_debezium_mssql-test_kpt_cdc.data-changes.binary_hex</item>
        <item>0</item>
        <item>6</item>
        <item>2021-10-23 11:45:28.320</item>
      </line>
    </data>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>144</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Delete</name>
    <type>Delete</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>1000</commit>
    <lookup>
      <schema>"${Param.Schema.Name}"</schema>
      <table>"${Param.Table.Name}"</table>
    </lookup>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>592</xloc>
      <yloc>2256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>GMT_to_Timestamp</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>yyyy-MM-dd'T'HH:mm:ss.SSSXXX</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>880</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Hex_to_Binary.step1</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>2160</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Hex_to_Binary.step2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var fieldNames = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; fieldNames.length; index++) {
	var inMeta = getInputRowMeta().getValueMeta(index);
	var outMate = getOutputRowMeta().getValueMeta(index);
	info = info + fieldNames[index] + ": " + inMeta.getTypeDesc() + " - " + outMate.getTypeDesc() + "\n";
	if(inMeta.getTypeDesc() == 'String' &amp;&amp; outMate.getTypeDesc() == 'Binary'){
		var value = row[index];
		outMate.setConversionMask(null);
		if(value != null &amp;&amp; value.length() != 0) {
			var length = inMeta.getConversionMask();
			var bytes = Packages.org.apache.commons.codec.binary.Base64.decodeBase64( value.getBytes() );
Alert(bytes.length)
Alert(bytes[0])
Alert(bytes[1])
			row[index] = bytes;
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>800</xloc>
      <yloc>2288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>InsertUpdate: insert</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>"${Param.Schema.Name}"</schema>
      <table>"${Param.Table.Name}"</table>
    </lookup>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>272</xloc>
      <yloc>2256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>InsertUpdate: update</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <commit>1000</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema>"${Param.Schema.Name}"</schema>
      <table>"${Param.Table.Name}"</table>
    </lookup>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>432</xloc>
      <yloc>2256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>JSON input: column</name>
    <type>JsonInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <include>N</include>
    <include_field/>
    <rownum>N</rownum>
    <addresultfile>N</addresultfile>
    <readurl>N</readurl>
    <removeSourceField>N</removeSourceField>
    <IsIgnoreEmptyFile>N</IsIgnoreEmptyFile>
    <doNotFailIfNoFile>Y</doNotFailIfNoFile>
    <ignoreMissingPath>Y</ignoreMissingPath>
    <defaultPathLeafToNull>Y</defaultPathLeafToNull>
    <rownum_field/>
    <file>
      <name/>
      <filemask/>
      <exclude_filemask/>
      <file_required>N</file_required>
      <include_subfolders>N</include_subfolders>
    </file>
    <fields>
      <field>
        <name>kettle_field__id</name>
        <path>$.payload.after._id</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BOOLEAN</name>
        <path>$.payload.after.BOOLEAN</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BOOL</name>
        <path>$.payload.after.BOOL</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BIT_1</name>
        <path>$.payload.after.BIT_1</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BIT_not_1</name>
        <path>$.payload.after.BIT_not_1</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_TINYINT</name>
        <path>$.payload.after.TINYINT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_SMALLINT</name>
        <path>$.payload.after.SMALLINT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_MEDIUMINT</name>
        <path>$.payload.after.MEDIUMINT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_INT</name>
        <path>$.payload.after.INT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_INTEGER</name>
        <path>$.payload.after.INTEGER</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BIGINT</name>
        <path>$.payload.after.BIGINT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_REAL</name>
        <path>$.payload.after.REAL</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_FLOAT</name>
        <path>$.payload.after.FLOAT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_DOUBLE</name>
        <path>$.payload.after.DOUBLE</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_CHAR</name>
        <path>$.payload.after.CHAR</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_VARCHAR</name>
        <path>$.payload.after.VARCHAR</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BINARY</name>
        <path>$.payload.after.BINARY</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_VARBINARY</name>
        <path>$.payload.after.VARBINARY</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_TINYBLOB</name>
        <path>$.payload.after.TINYBLOB</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_TINYTEXT</name>
        <path>$.payload.after.TINYTEXT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_BLOB</name>
        <path>$.payload.after.BLOB</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_TEXT</name>
        <path>$.payload.after.TEXT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_MEDIUMBLOB</name>
        <path>$.payload.after.MEDIUMBLOB</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_MEDIUMTEXT</name>
        <path>$.payload.after.MEDIUMTEXT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_LONGBLOB</name>
        <path>$.payload.after.LONGBLOB</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_LONGTEXT</name>
        <path>$.payload.after.LONGTEXT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_JSON</name>
        <path>$.payload.after.JSON</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_ENUM</name>
        <path>$.payload.after.ENUM</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_SET</name>
        <path>$.payload.after.SET</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_YEAR</name>
        <path>$.payload.after.YEAR</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_TIMESTAMP</name>
        <path>$.payload.after.TIMESTAMP</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_DATE</name>
        <path>$.payload.after.DATE</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_TIME</name>
        <path>$.payload.after.TIME</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_DATETIME_3</name>
        <path>$.payload.after.DATETIME_3</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_DATETIME_6</name>
        <path>$.payload.after.DATETIME_6</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_NUMERIC</name>
        <path>$.payload.after.NUMERIC</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_DECIMAL</name>
        <path>$.payload.after.DECIMAL</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_GEOMETRY</name>
        <path>$.payload.after.GEOMETRY</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_LINESTRING</name>
        <path>$.payload.after.LINESTRING</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_POLYGON</name>
        <path>$.payload.after.POLYGON</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_MULTIPOINT</name>
        <path>$.payload.after.MULTIPOINT</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_MULTILINESTRING</name>
        <path>$.payload.after.MULTILINESTRING</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_MULTIPOLYGON</name>
        <path>$.payload.after.MULTIPOLYGON</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
      <field>
        <name>kettle_field_GEOMETRYCOLLECTION</name>
        <path>$.payload.after.GEOMETRYCOLLECTION</path>
        <type>String</type>
        <format/>
        <currency>-1</currency>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <trim_type>none</trim_type>
        <repeat>N</repeat>
      </field>
    </fields>
    <limit>0</limit>
    <IsInFields>Y</IsInFields>
    <IsAFile>N</IsAFile>
    <valueField>message</valueField>
    <shortFileFieldName/>
    <pathFieldName/>
    <hiddenFieldName/>
    <lastModificationTimeFieldName/>
    <uriNameFieldName/>
    <rootUriNameFieldName/>
    <extensionFieldName/>
    <sizeFieldName/>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / case</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>topic</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>None</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step/>
    <cases>
      <case>
        <value>test_debezium_mssql-test_kpt_cdc.data-changes.binary_base64</value>
        <target_step>Base64_to_Binary.step1</target_step>
      </case>
      <case>
        <value>test_debezium_mssql-test_kpt_cdc.data-changes.binary_bytes</value>
        <target_step>Byte_to_Binary.step1</target_step>
      </case>
      <case>
        <value>test_debezium_mssql-test_kpt_cdc.data-changes.binary_hex</value>
        <target_step>Hex_to_Binary.step1</target_step>
      </case>
    </cases>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>576</xloc>
      <yloc>1648</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Switch / case: target_switch_flag</name>
    <type>SwitchCase</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fieldname>target_switch_flag</fieldname>
    <use_contains>N</use_contains>
    <case_value_type>String</case_value_type>
    <case_value_format/>
    <case_value_decimal/>
    <case_value_group/>
    <default_target_step>Dummy: ingore not-dml-change</default_target_step>
    <cases>
      <case>
        <value>INSERT</value>
        <target_step>InsertUpdate: insert</target_step>
      </case>
      <case>
        <value>DELETE</value>
        <target_step>Delete</target_step>
      </case>
      <case>
        <value>UPDATE</value>
        <target_step>InsertUpdate: update</target_step>
      </case>
      <case>
        <value>INSERT_BLUK</value>
        <target_step>TableOutput</target_step>
      </case>
    </cases>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>2096</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>TableOutput</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <schema>"${Param.Schema.Name}"</schema>
    <table>"${Param.Table.Name}"</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>Y</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>112</xloc>
      <yloc>2256</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>days_to_Date</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var field_names = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; field_names.length; index++) {
	var iInfo = getInputRowMeta().getValueMeta(index);
	var oInfo = getOutputRowMeta().getValueMeta(index);
	info = info + field_names[index] + ": " + iInfo.getTypeDesc() + " - " + oInfo.getTypeDesc() + "\n";
    
	if(iInfo.getTypeDesc() == 'String' &amp;&amp; oInfo.getTypeDesc() == 'Date'){
		var value = row[index];
		if(value != null &amp;&amp; value.length() != 0) {
			var epoch = str2date("1970-01-01 00:00:00","yyyy-MM-dd HH:mm:ss","EN");
			value = str2num(value);
			value = dateAdd(epoch, "d", value);
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>kettle_field_DATE</name>
        <rename>kettle_field_DATE</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1008</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>format_to_Date</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1808</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>format_to_Timestamp</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_TIMESTAMP</name>
        <rename>kettle_field_TIMESTAMP</rename>
        <type>Timestamp</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>yyyy-MM-dd'T'HH:mm:ssXXX</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1936</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>microseconds_to_Date</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var field_names = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; field_names.length; index++) {
	var iInfo = getInputRowMeta().getValueMeta(index);
	var oInfo = getOutputRowMeta().getValueMeta(index);
	info = info + field_names[index] + ": " + iInfo.getTypeDesc() + " - " + oInfo.getTypeDesc() + "\n";
    
	if(iInfo.getTypeDesc() == 'String' &amp;&amp; oInfo.getTypeDesc() == 'Date'){
		var value = row[index];
		if(value != null &amp;&amp; value.length() != 0) {
			var epoch = str2date("1970-01-01 00:00:00","yyyy-MM-dd HH:mm:ss","EN");
			value = str2num(value) / 1000;
			value = new java.util.Date(value)
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>kettle_field_DATETIME_6</name>
        <rename>kettle_field_DATETIME_6</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1264</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>milliseconds_to_Date</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var field_names = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; field_names.length; index++) {
	var iInfo = getInputRowMeta().getValueMeta(index);
	var oInfo = getOutputRowMeta().getValueMeta(index);
	info = info + field_names[index] + ": " + iInfo.getTypeDesc() + " - " + oInfo.getTypeDesc() + "\n";
    
	if(iInfo.getTypeDesc() == 'String' &amp;&amp; oInfo.getTypeDesc() == 'Date'){
		var value = row[index];
		if(value != null &amp;&amp; value.length() != 0) {
			var epoch = str2date("1970-01-01 00:00:00","yyyy-MM-dd HH:mm:ss","EN");
			value = str2num(value);
			value = new java.util.Date(value)
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>kettle_field_TIME</name>
        <rename>kettle_field_TIME</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_DATETIME_3</name>
        <rename>kettle_field_DATETIME_3</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1136</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>nanoseconds_to_Date</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var field_names = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; field_names.length; index++) {
	var iInfo = getInputRowMeta().getValueMeta(index);
	var oInfo = getOutputRowMeta().getValueMeta(index);
	info = info + field_names[index] + ": " + iInfo.getTypeDesc() + " - " + oInfo.getTypeDesc() + "\n";
    
	if(iInfo.getTypeDesc() == 'String' &amp;&amp; oInfo.getTypeDesc() == 'Date'){
		var value = row[index];
		if(value != null &amp;&amp; value.length() != 0) {
			var epoch = str2date("1970-01-01 00:00:00","yyyy-MM-dd HH:mm:ss","EN");
			value = str2num(value) / 1000 / 1000;
			value = new java.util.Date(value)
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1392</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>scale_to_BigNumber.step1</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_NUMERIC</name>
        <rename>kettle_field_NUMERIC</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>10,1</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_DECIMAL</name>
        <rename>kettle_field_DECIMAL</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>10,2</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1520</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>scale_to_BigNumber.step2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>trans_Status = SKIP_TRANSFORMATION;

var info = "";
var row = createRowCopy(getOutputRowMeta().size());
var fieldNames = getOutputRowMeta().getFieldNames();
for (index = 0; index &lt; fieldNames.length; index++) {
	var inMeta = getInputRowMeta().getValueMeta(index);
	var outMate = getOutputRowMeta().getValueMeta(index);
	info = info + fieldNames[index] + ": " + inMeta.getTypeDesc() + " - " + outMate.getTypeDesc() + "\n";
	if(inMeta.getTypeDesc() == 'String' &amp;&amp; outMate.getTypeDesc() == 'BigNumber'){
		var value = row[index];
		outMate.setConversionMask(null);
		if(value != null &amp;&amp; value.length() != 0) {
			var format = inMeta.getConversionMask().split(',');
			var scale = str2num(format[1]);
			var bytes = Packages.org.apache.commons.codec.binary.Base64.decodeBase64( value.getBytes() );
			var bi = new Packages.java.math.BigInteger(bytes);
			var bd = new java.math.BigDecimal(bi,scale);
			value = bd;
		} else {
			value = null;
		}
		row[index] = value;
	}
}
putRow(row);
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>kettle_field_NUMERIC</name>
        <rename>kettle_field_NUMERIC</rename>
        <type>BigNumber</type>
        <length>-1</length>
        <precision>10</precision>
        <replace>Y</replace>
      </field>
      <field>
        <name>kettle_field_DECIMAL</name>
        <rename>kettle_field_DECIMAL</rename>
        <type>BigNumber</type>
        <length>-1</length>
        <precision>10</precision>
        <replace>Y</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>1648</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>to_BigNumber</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_REAL</name>
        <rename>kettle_field_REAL</rename>
        <type>BigNumber</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_FLOAT</name>
        <rename>kettle_field_FLOAT</rename>
        <type>BigNumber</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_DOUBLE</name>
        <rename>kettle_field_DOUBLE</rename>
        <type>BigNumber</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>752</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>to_Boolean</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_BIT_1</name>
        <rename>kettle_field_BIT_1</rename>
        <type>Boolean</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>368</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>to_Integer</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_BOOLEAN</name>
        <rename>kettle_field_BOOLEAN</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_BOOL</name>
        <rename>kettle_field_BOOL</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_TINYINT</name>
        <rename>kettle_field_TINYINT</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_SMALLINT</name>
        <rename>kettle_field_SMALLINT</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_MEDIUMINT</name>
        <rename>kettle_field_MEDIUMINT</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_INT</name>
        <rename>kettle_field_INT</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_INTEGER</name>
        <rename>kettle_field_INTEGER</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_BIGINT</name>
        <rename>kettle_field_BIGINT</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>kettle_field_YEAR</name>
        <rename>kettle_field_YEAR</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>496</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>to_Number</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>message</name>
        <rename>message</rename>
        <type>String</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>624</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes/>
</transformation>
